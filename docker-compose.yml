version: '3.9'

services:
  # Infrastructure Services
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devgen-network

  db-init:
    build:
      context: ./saas-devgen/db-init
      dockerfile: Dockerfile
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      FLYWAY_USER: ${POSTGRES_USER}
      FLYWAY_PASSWORD: ${POSTGRES_PASSWORD}
      FLYWAY_SCHEMAS: aiteam
      FLYWAY_BASELINE_ON_MIGRATE: 'true'
      FLYWAY_VALIDATE_ON_MIGRATE: 'true'
      FLYWAY_OUT_OF_ORDER: 'true'
    depends_on:
      - postgres
    networks:
      - devgen-network
    restart: "no"

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - devgen-network

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
    command: start-dev
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - devgen-network

  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    networks:
      - devgen-network

  flyway:
    image: flyway/flyway:9.22.3
    depends_on:
      - postgres
    environment:
      - FLYWAY_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - FLYWAY_USER=${POSTGRES_USER}
      - FLYWAY_PASSWORD=${POSTGRES_PASSWORD}
      - FLYWAY_SCHEMAS=aiteam,public
      - FLYWAY_DEFAULT_SCHEMA=aiteam
      - FLYWAY_BASELINE_ON_MIGRATE=true
      - FLYWAY_VALIDATE_ON_MIGRATE=true
      - FLYWAY_OUT_OF_ORDER=false
    volumes:
      - ./saas-devgen/db-init/sql:/flyway/sql
    command: migrate
    networks:
      - devgen-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - devgen-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - devgen-network

  # Core Enterprise Services
 
  profile-service:
    build:
      context: .
      dockerfile: saas-devgen/profile-service/Dockerfile
    ports:
      - "${PROFILE_SERVICE_PORT:-8005}:${PROFILE_SERVICE_PORT:-8005}"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=${KEYCLOAK_REALM:-master}
      - KEYCLOAK_AUDIENCE=${KEYCLOAK_AUDIENCE:-profile-service}
      - PROFILE_SERVICE_PORT=${PROFILE_SERVICE_PORT:-8005}
      - KAFKA_BROKER_URL=${KAFKA_BROKER_URL}
      - KAFKA_TOPIC_USER_REGISTRATION=${KAFKA_TOPIC_USER_REGISTRATION}
      - KAFKA_GROUP_ID=${KAFKA_GROUP_ID}
    depends_on:
      - postgres
      - keycloak
      - kafka
    networks:
      - devgen-network

  gateway-service:
    build:
      context: .
      dockerfile: saas-devgen/gateway-service/Dockerfile
    ports:
      - "${API_GATEWAY_PORT:-8000}:${API_GATEWAY_PORT:-8000}"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=${KEYCLOAK_REALM:-master}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID:-admin-cli}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - KAFKA_BROKER_URL=kafka:29092
      - KAFKA_TOPIC_USER_REGISTRATION=user-registration-events
      - PROFILE_SERVICE_URL=http://profile-service:8005
      - ORCHESTRATOR_URL=http://orchestrator:8002
      - CODEGEN_SERVICE_URL=http://codegen-service:8003
      - EXECUTOR_SERVICE_URL=http://executor-service:8006
      - STORAGE_SERVICE_URL=http://storage-service:8007
      - AUDIT_SERVICE_URL=http://audit-service:8008
    depends_on:
      - postgres
      - keycloak
      - kafka 
      - db-init
      - profile-service
    networks:
      - devgen-network

volumes:
  postgres_data:
  minio_data:
  loki_data:
  kong_ssl:
  kong_logs:
  kong_config:
  kafka_data:
  zookeeper_data:
  zookeeper_logs:

networks:
  devgen-network:
    driver: bridge
