# Enterprise Microservices Deployment
# Production-ready deployments for all AI DevGen services

---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: ai-devgen
  labels:
    app: api-gateway
    tier: gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: ai-devgen/api-gateway:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          value: "postgresql://devgen:$(POSTGRES_PASSWORD)@postgres:5432/devgen"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: ai-devgen
spec:
  selector:
    app: api-gateway
  ports:
  - port: 8000
    targetPort: 8000
  type: LoadBalancer
---
# Auth Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: ai-devgen
  labels:
    app: auth-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: ai-devgen/auth-service:latest
        ports:
        - containerPort: 8001
        env:
        - name: DATABASE_URL
          value: "postgresql://devgen:$(POSTGRES_PASSWORD)@postgres:5432/devgen"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: ai-devgen
spec:
  selector:
    app: auth-service
  ports:
  - port: 8001
    targetPort: 8001
  type: ClusterIP
---
# Orchestrator Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator
  namespace: ai-devgen
  labels:
    app: orchestrator
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orchestrator
  template:
    metadata:
      labels:
        app: orchestrator
    spec:
      containers:
      - name: orchestrator
        image: ai-devgen/orchestrator:latest
        ports:
        - containerPort: 8002
        env:
        - name: DATABASE_URL
          value: "postgresql://devgen:$(POSTGRES_PASSWORD)@postgres:5432/devgen"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator
  namespace: ai-devgen
spec:
  selector:
    app: orchestrator
  ports:
  - port: 8002
    targetPort: 8002
  type: ClusterIP
---
# Codegen Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: codegen-service
  namespace: ai-devgen
  labels:
    app: codegen-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: codegen-service
  template:
    metadata:
      labels:
        app: codegen-service
    spec:
      containers:
      - name: codegen-service
        image: ai-devgen/codegen-service:latest
        ports:
        - containerPort: 8003
        env:
        - name: DATABASE_URL
          value: "postgresql://devgen:$(POSTGRES_PASSWORD)@postgres:5432/devgen"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 60
          periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: codegen-service
  namespace: ai-devgen
spec:
  selector:
    app: codegen-service
  ports:
  - port: 8003
    targetPort: 8003
  type: ClusterIP
---
# Storage Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage-service
  namespace: ai-devgen
  labels:
    app: storage-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: storage-service
  template:
    metadata:
      labels:
        app: storage-service
    spec:
      containers:
      - name: storage-service
        image: ai-devgen/storage-service:latest
        ports:
        - containerPort: 8004
        env:
        - name: DATABASE_URL
          value: "postgresql://devgen:$(POSTGRES_PASSWORD)@postgres:5432/devgen"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: MINIO_ENDPOINT
          value: "minio:9000"
        - name: MINIO_ACCESS_KEY
          value: "admin"
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: password
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8004
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: storage-service
  namespace: ai-devgen
spec:
  selector:
    app: storage-service
  ports:
  - port: 8004
    targetPort: 8004
  type: ClusterIP
